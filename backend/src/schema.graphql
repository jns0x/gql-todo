# import * from './generated/prisma.graphql'

type SuccessMessage {
  message: String
}

type Mutation {
  createItem(
    title: String
    description: String
    image: String
    large_image: String
    date: DateTime
    done: Boolean!
  ): Item!
  updateToDo(
    id: String!
    title: String
    description: String
    image: String
    large_image: String
    date: DateTime
    done: Boolean!
  ): Item!
  deleteItem(id: String!): Item
  signup(email: String!, password: String!, name: String!, image: String): User!
  signin(email: String!, password: String!): User!
  facebookSignin(
    email: String!
    name: String!
    facebookUserId: String!
    image: String
  ): User!
  facebookSigninWithToken(idToken: String!): User!
  googleSignin(
    email: String!
    name: String!
    googleUserId: String!
    image: String
  ): User!
  googleSigninWithToken(idToken: String!): User!
  signout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(
    resetToken: String!
    password: String!
    confirmPassword: String!
  ): User!
  deleteCloudinaryImage(
    id: String
    image: String
    imageId: String
  ): SuccessMessage
  # createItemImage(
  #   itemId: String!
  #   image: String!
  #   name: String
  #   large_image: String
  #   public_id: String
  # ): Image!
  # createImage(
  #   image: String!
  #   name: String
  #   large_image: String
  #   public_id: String
  # ): Image
  # deleteImage(
  #   id: String
  #   image: String
  #   large_image: String
  #   public_id: String
  # ): SuccessMessage
  # updateImage(
  #   id: String
  #   image: String
  #   large_image: String
  #   public_id: String
  # ): Image
}

type Query {
  items: [Item]!
  item(where: ItemWhereUniqueInput!): Item
  me: User
}

type User {
  id: ID!
  name: String!
  email: String!
  image: String
  items: [Item]!
  permissions: [Permission!]!
}
