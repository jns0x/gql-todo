# source: https://eu1.prisma.sh/pawel-janus/gql-todo/dev
# timestamp: Wed Dec 11 2019 01:59:41 GMT+0100 (Central European Standard Time)

type AggregateImage {
  count: Int!
}

type AggregateItem {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

scalar DateTime

type Image implements Node {
  id: ID!
  image: String!
  large_image: String
  public_id: String
  user: User
  item: Item
  type: ImageType!
}

"""A connection to a list of items."""
type ImageConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ImageEdge]!
  aggregate: AggregateImage!
}

input ImageCreateInput {
  id: ID
  image: String!
  large_image: String
  public_id: String
  type: ImageType!
  user: UserCreateOneWithoutUserImageInput
  item: ItemCreateOneWithoutItemImageInput
}

input ImageCreateManyWithoutItemInput {
  create: [ImageCreateWithoutItemInput!]
  connect: [ImageWhereUniqueInput!]
}

input ImageCreateOneWithoutUserInput {
  create: ImageCreateWithoutUserInput
  connect: ImageWhereUniqueInput
}

input ImageCreateWithoutItemInput {
  id: ID
  image: String!
  large_image: String
  public_id: String
  type: ImageType!
  user: UserCreateOneWithoutUserImageInput
}

input ImageCreateWithoutUserInput {
  id: ID
  image: String!
  large_image: String
  public_id: String
  type: ImageType!
  item: ItemCreateOneWithoutItemImageInput
}

"""An edge in a connection."""
type ImageEdge {
  """The item at the end of the edge."""
  node: Image!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ImageOrderByInput {
  id_ASC
  id_DESC
  image_ASC
  image_DESC
  large_image_ASC
  large_image_DESC
  public_id_ASC
  public_id_DESC
  type_ASC
  type_DESC
}

type ImagePreviousValues {
  id: ID!
  image: String!
  large_image: String
  public_id: String
  type: ImageType!
}

input ImageScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ImageScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ImageScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ImageScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  large_image: String

  """All values that are not equal to given value."""
  large_image_not: String

  """All values that are contained in given list."""
  large_image_in: [String!]

  """All values that are not contained in given list."""
  large_image_not_in: [String!]

  """All values less than the given value."""
  large_image_lt: String

  """All values less than or equal the given value."""
  large_image_lte: String

  """All values greater than the given value."""
  large_image_gt: String

  """All values greater than or equal the given value."""
  large_image_gte: String

  """All values containing the given string."""
  large_image_contains: String

  """All values not containing the given string."""
  large_image_not_contains: String

  """All values starting with the given string."""
  large_image_starts_with: String

  """All values not starting with the given string."""
  large_image_not_starts_with: String

  """All values ending with the given string."""
  large_image_ends_with: String

  """All values not ending with the given string."""
  large_image_not_ends_with: String
  public_id: String

  """All values that are not equal to given value."""
  public_id_not: String

  """All values that are contained in given list."""
  public_id_in: [String!]

  """All values that are not contained in given list."""
  public_id_not_in: [String!]

  """All values less than the given value."""
  public_id_lt: String

  """All values less than or equal the given value."""
  public_id_lte: String

  """All values greater than the given value."""
  public_id_gt: String

  """All values greater than or equal the given value."""
  public_id_gte: String

  """All values containing the given string."""
  public_id_contains: String

  """All values not containing the given string."""
  public_id_not_contains: String

  """All values starting with the given string."""
  public_id_starts_with: String

  """All values not starting with the given string."""
  public_id_not_starts_with: String

  """All values ending with the given string."""
  public_id_ends_with: String

  """All values not ending with the given string."""
  public_id_not_ends_with: String
  type: ImageType

  """All values that are not equal to given value."""
  type_not: ImageType

  """All values that are contained in given list."""
  type_in: [ImageType!]

  """All values that are not contained in given list."""
  type_not_in: [ImageType!]
}

type ImageSubscriptionPayload {
  mutation: MutationType!
  node: Image
  updatedFields: [String!]
  previousValues: ImagePreviousValues
}

input ImageSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ImageSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ImageSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ImageSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ImageWhereInput
}

enum ImageType {
  AVATAR
  ITEM_IMAGE
}

input ImageUpdateInput {
  image: String
  large_image: String
  public_id: String
  type: ImageType
  user: UserUpdateOneWithoutUserImageInput
  item: ItemUpdateOneWithoutItemImageInput
}

input ImageUpdateManyDataInput {
  image: String
  large_image: String
  public_id: String
  type: ImageType
}

input ImageUpdateManyMutationInput {
  image: String
  large_image: String
  public_id: String
  type: ImageType
}

input ImageUpdateManyWithoutItemInput {
  create: [ImageCreateWithoutItemInput!]
  connect: [ImageWhereUniqueInput!]
  set: [ImageWhereUniqueInput!]
  disconnect: [ImageWhereUniqueInput!]
  delete: [ImageWhereUniqueInput!]
  update: [ImageUpdateWithWhereUniqueWithoutItemInput!]
  updateMany: [ImageUpdateManyWithWhereNestedInput!]
  deleteMany: [ImageScalarWhereInput!]
  upsert: [ImageUpsertWithWhereUniqueWithoutItemInput!]
}

input ImageUpdateManyWithWhereNestedInput {
  where: ImageScalarWhereInput!
  data: ImageUpdateManyDataInput!
}

input ImageUpdateOneWithoutUserInput {
  create: ImageCreateWithoutUserInput
  connect: ImageWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ImageUpdateWithoutUserDataInput
  upsert: ImageUpsertWithoutUserInput
}

input ImageUpdateWithoutItemDataInput {
  image: String
  large_image: String
  public_id: String
  type: ImageType
  user: UserUpdateOneWithoutUserImageInput
}

input ImageUpdateWithoutUserDataInput {
  image: String
  large_image: String
  public_id: String
  type: ImageType
  item: ItemUpdateOneWithoutItemImageInput
}

input ImageUpdateWithWhereUniqueWithoutItemInput {
  where: ImageWhereUniqueInput!
  data: ImageUpdateWithoutItemDataInput!
}

input ImageUpsertWithoutUserInput {
  update: ImageUpdateWithoutUserDataInput!
  create: ImageCreateWithoutUserInput!
}

input ImageUpsertWithWhereUniqueWithoutItemInput {
  where: ImageWhereUniqueInput!
  update: ImageUpdateWithoutItemDataInput!
  create: ImageCreateWithoutItemInput!
}

input ImageWhereInput {
  """Logical AND on all given filters."""
  AND: [ImageWhereInput!]

  """Logical OR on all given filters."""
  OR: [ImageWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ImageWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  large_image: String

  """All values that are not equal to given value."""
  large_image_not: String

  """All values that are contained in given list."""
  large_image_in: [String!]

  """All values that are not contained in given list."""
  large_image_not_in: [String!]

  """All values less than the given value."""
  large_image_lt: String

  """All values less than or equal the given value."""
  large_image_lte: String

  """All values greater than the given value."""
  large_image_gt: String

  """All values greater than or equal the given value."""
  large_image_gte: String

  """All values containing the given string."""
  large_image_contains: String

  """All values not containing the given string."""
  large_image_not_contains: String

  """All values starting with the given string."""
  large_image_starts_with: String

  """All values not starting with the given string."""
  large_image_not_starts_with: String

  """All values ending with the given string."""
  large_image_ends_with: String

  """All values not ending with the given string."""
  large_image_not_ends_with: String
  public_id: String

  """All values that are not equal to given value."""
  public_id_not: String

  """All values that are contained in given list."""
  public_id_in: [String!]

  """All values that are not contained in given list."""
  public_id_not_in: [String!]

  """All values less than the given value."""
  public_id_lt: String

  """All values less than or equal the given value."""
  public_id_lte: String

  """All values greater than the given value."""
  public_id_gt: String

  """All values greater than or equal the given value."""
  public_id_gte: String

  """All values containing the given string."""
  public_id_contains: String

  """All values not containing the given string."""
  public_id_not_contains: String

  """All values starting with the given string."""
  public_id_starts_with: String

  """All values not starting with the given string."""
  public_id_not_starts_with: String

  """All values ending with the given string."""
  public_id_ends_with: String

  """All values not ending with the given string."""
  public_id_not_ends_with: String
  type: ImageType

  """All values that are not equal to given value."""
  type_not: ImageType

  """All values that are contained in given list."""
  type_in: [ImageType!]

  """All values that are not contained in given list."""
  type_not_in: [ImageType!]
  user: UserWhereInput
  item: ItemWhereInput
}

input ImageWhereUniqueInput {
  id: ID
  public_id: String
}

type Item implements Node {
  id: ID!
  title: String!
  description: String!
  image: String
  itemImage(where: ImageWhereInput, orderBy: ImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Image!]
  done: Boolean!
  createdAt: DateTime
  updatedAt: DateTime
  user: User!
}

"""A connection to a list of items."""
type ItemConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ItemEdge]!
  aggregate: AggregateItem!
}

input ItemCreateInput {
  id: ID
  title: String!
  description: String!
  image: String
  done: Boolean!
  itemImage: ImageCreateManyWithoutItemInput
  user: UserCreateOneWithoutItemsInput!
}

input ItemCreateManyWithoutUserInput {
  create: [ItemCreateWithoutUserInput!]
  connect: [ItemWhereUniqueInput!]
}

input ItemCreateOneWithoutItemImageInput {
  create: ItemCreateWithoutItemImageInput
  connect: ItemWhereUniqueInput
}

input ItemCreateWithoutItemImageInput {
  id: ID
  title: String!
  description: String!
  image: String
  done: Boolean!
  user: UserCreateOneWithoutItemsInput!
}

input ItemCreateWithoutUserInput {
  id: ID
  title: String!
  description: String!
  image: String
  done: Boolean!
  itemImage: ImageCreateManyWithoutItemInput
}

"""An edge in a connection."""
type ItemEdge {
  """The item at the end of the edge."""
  node: Item!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ItemOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  image_ASC
  image_DESC
  done_ASC
  done_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ItemPreviousValues {
  id: ID!
  title: String!
  description: String!
  image: String
  done: Boolean!
  createdAt: DateTime
  updatedAt: DateTime
}

input ItemScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ItemScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ItemScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ItemScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  done: Boolean

  """All values that are not equal to given value."""
  done_not: Boolean
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type ItemSubscriptionPayload {
  mutation: MutationType!
  node: Item
  updatedFields: [String!]
  previousValues: ItemPreviousValues
}

input ItemSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ItemSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ItemSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ItemSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ItemWhereInput
}

input ItemUpdateInput {
  title: String
  description: String
  image: String
  done: Boolean
  itemImage: ImageUpdateManyWithoutItemInput
  user: UserUpdateOneRequiredWithoutItemsInput
}

input ItemUpdateManyDataInput {
  title: String
  description: String
  image: String
  done: Boolean
}

input ItemUpdateManyMutationInput {
  title: String
  description: String
  image: String
  done: Boolean
}

input ItemUpdateManyWithoutUserInput {
  create: [ItemCreateWithoutUserInput!]
  connect: [ItemWhereUniqueInput!]
  set: [ItemWhereUniqueInput!]
  disconnect: [ItemWhereUniqueInput!]
  delete: [ItemWhereUniqueInput!]
  update: [ItemUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ItemUpdateManyWithWhereNestedInput!]
  deleteMany: [ItemScalarWhereInput!]
  upsert: [ItemUpsertWithWhereUniqueWithoutUserInput!]
}

input ItemUpdateManyWithWhereNestedInput {
  where: ItemScalarWhereInput!
  data: ItemUpdateManyDataInput!
}

input ItemUpdateOneWithoutItemImageInput {
  create: ItemCreateWithoutItemImageInput
  connect: ItemWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ItemUpdateWithoutItemImageDataInput
  upsert: ItemUpsertWithoutItemImageInput
}

input ItemUpdateWithoutItemImageDataInput {
  title: String
  description: String
  image: String
  done: Boolean
  user: UserUpdateOneRequiredWithoutItemsInput
}

input ItemUpdateWithoutUserDataInput {
  title: String
  description: String
  image: String
  done: Boolean
  itemImage: ImageUpdateManyWithoutItemInput
}

input ItemUpdateWithWhereUniqueWithoutUserInput {
  where: ItemWhereUniqueInput!
  data: ItemUpdateWithoutUserDataInput!
}

input ItemUpsertWithoutItemImageInput {
  update: ItemUpdateWithoutItemImageDataInput!
  create: ItemCreateWithoutItemImageInput!
}

input ItemUpsertWithWhereUniqueWithoutUserInput {
  where: ItemWhereUniqueInput!
  update: ItemUpdateWithoutUserDataInput!
  create: ItemCreateWithoutUserInput!
}

input ItemWhereInput {
  """Logical AND on all given filters."""
  AND: [ItemWhereInput!]

  """Logical OR on all given filters."""
  OR: [ItemWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ItemWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  done: Boolean

  """All values that are not equal to given value."""
  done_not: Boolean
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  itemImage_every: ImageWhereInput
  itemImage_some: ImageWhereInput
  itemImage_none: ImageWhereInput
  user: UserWhereInput
}

input ItemWhereUniqueInput {
  id: ID
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createItem(data: ItemCreateInput!): Item!
  createImage(data: ImageCreateInput!): Image!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateItem(data: ItemUpdateInput!, where: ItemWhereUniqueInput!): Item
  updateImage(data: ImageUpdateInput!, where: ImageWhereUniqueInput!): Image
  deleteUser(where: UserWhereUniqueInput!): User
  deleteItem(where: ItemWhereUniqueInput!): Item
  deleteImage(where: ImageWhereUniqueInput!): Image
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertItem(where: ItemWhereUniqueInput!, create: ItemCreateInput!, update: ItemUpdateInput!): Item!
  upsertImage(where: ImageWhereUniqueInput!, create: ImageCreateInput!, update: ImageUpdateInput!): Image!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateManyItems(data: ItemUpdateManyMutationInput!, where: ItemWhereInput): BatchPayload!
  updateManyImages(data: ImageUpdateManyMutationInput!, where: ImageWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyItems(where: ItemWhereInput): BatchPayload!
  deleteManyImages(where: ImageWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

enum Permission {
  USER
  ADMIN
}

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  items(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Item]!
  images(where: ImageWhereInput, orderBy: ImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Image]!
  user(where: UserWhereUniqueInput!): User
  item(where: ItemWhereUniqueInput!): Item
  image(where: ImageWhereUniqueInput!): Image
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  itemsConnection(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ItemConnection!
  imagesConnection(where: ImageWhereInput, orderBy: ImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ImageConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  item(where: ItemSubscriptionWhereInput): ItemSubscriptionPayload
  image(where: ImageSubscriptionWhereInput): ImageSubscriptionPayload
}

type User implements Node {
  id: ID!
  name: String!
  email: String!
  password: String
  image: String
  userImage: Image
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission!]!
  items(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Item!]
  facebookUserId: String
  googleUserId: String
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  name: String!
  email: String!
  password: String
  image: String
  resetToken: String
  resetTokenExpiry: Float
  facebookUserId: String
  googleUserId: String
  permissions: UserCreatepermissionsInput
  userImage: ImageCreateOneWithoutUserInput
  items: ItemCreateManyWithoutUserInput
}

input UserCreateOneWithoutItemsInput {
  create: UserCreateWithoutItemsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutUserImageInput {
  create: UserCreateWithoutUserImageInput
  connect: UserWhereUniqueInput
}

input UserCreatepermissionsInput {
  set: [Permission!]
}

input UserCreateWithoutItemsInput {
  id: ID
  name: String!
  email: String!
  password: String
  image: String
  resetToken: String
  resetTokenExpiry: Float
  facebookUserId: String
  googleUserId: String
  permissions: UserCreatepermissionsInput
  userImage: ImageCreateOneWithoutUserInput
}

input UserCreateWithoutUserImageInput {
  id: ID
  name: String!
  email: String!
  password: String
  image: String
  resetToken: String
  resetTokenExpiry: Float
  facebookUserId: String
  googleUserId: String
  permissions: UserCreatepermissionsInput
  items: ItemCreateManyWithoutUserInput
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  image_ASC
  image_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
  facebookUserId_ASC
  facebookUserId_DESC
  googleUserId_ASC
  googleUserId_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
  password: String
  image: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission!]!
  facebookUserId: String
  googleUserId: String
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  name: String
  email: String
  password: String
  image: String
  resetToken: String
  resetTokenExpiry: Float
  facebookUserId: String
  googleUserId: String
  permissions: UserUpdatepermissionsInput
  userImage: ImageUpdateOneWithoutUserInput
  items: ItemUpdateManyWithoutUserInput
}

input UserUpdateManyMutationInput {
  name: String
  email: String
  password: String
  image: String
  resetToken: String
  resetTokenExpiry: Float
  facebookUserId: String
  googleUserId: String
  permissions: UserUpdatepermissionsInput
}

input UserUpdateOneRequiredWithoutItemsInput {
  create: UserCreateWithoutItemsInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutItemsDataInput
  upsert: UserUpsertWithoutItemsInput
}

input UserUpdateOneWithoutUserImageInput {
  create: UserCreateWithoutUserImageInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutUserImageDataInput
  upsert: UserUpsertWithoutUserImageInput
}

input UserUpdatepermissionsInput {
  set: [Permission!]
}

input UserUpdateWithoutItemsDataInput {
  name: String
  email: String
  password: String
  image: String
  resetToken: String
  resetTokenExpiry: Float
  facebookUserId: String
  googleUserId: String
  permissions: UserUpdatepermissionsInput
  userImage: ImageUpdateOneWithoutUserInput
}

input UserUpdateWithoutUserImageDataInput {
  name: String
  email: String
  password: String
  image: String
  resetToken: String
  resetTokenExpiry: Float
  facebookUserId: String
  googleUserId: String
  permissions: UserUpdatepermissionsInput
  items: ItemUpdateManyWithoutUserInput
}

input UserUpsertWithoutItemsInput {
  update: UserUpdateWithoutItemsDataInput!
  create: UserCreateWithoutItemsInput!
}

input UserUpsertWithoutUserImageInput {
  update: UserUpdateWithoutUserImageDataInput!
  create: UserCreateWithoutUserImageInput!
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: Float

  """All values that are not equal to given value."""
  resetTokenExpiry_not: Float

  """All values that are contained in given list."""
  resetTokenExpiry_in: [Float!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [Float!]

  """All values less than the given value."""
  resetTokenExpiry_lt: Float

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: Float

  """All values greater than the given value."""
  resetTokenExpiry_gt: Float

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: Float
  facebookUserId: String

  """All values that are not equal to given value."""
  facebookUserId_not: String

  """All values that are contained in given list."""
  facebookUserId_in: [String!]

  """All values that are not contained in given list."""
  facebookUserId_not_in: [String!]

  """All values less than the given value."""
  facebookUserId_lt: String

  """All values less than or equal the given value."""
  facebookUserId_lte: String

  """All values greater than the given value."""
  facebookUserId_gt: String

  """All values greater than or equal the given value."""
  facebookUserId_gte: String

  """All values containing the given string."""
  facebookUserId_contains: String

  """All values not containing the given string."""
  facebookUserId_not_contains: String

  """All values starting with the given string."""
  facebookUserId_starts_with: String

  """All values not starting with the given string."""
  facebookUserId_not_starts_with: String

  """All values ending with the given string."""
  facebookUserId_ends_with: String

  """All values not ending with the given string."""
  facebookUserId_not_ends_with: String
  googleUserId: String

  """All values that are not equal to given value."""
  googleUserId_not: String

  """All values that are contained in given list."""
  googleUserId_in: [String!]

  """All values that are not contained in given list."""
  googleUserId_not_in: [String!]

  """All values less than the given value."""
  googleUserId_lt: String

  """All values less than or equal the given value."""
  googleUserId_lte: String

  """All values greater than the given value."""
  googleUserId_gt: String

  """All values greater than or equal the given value."""
  googleUserId_gte: String

  """All values containing the given string."""
  googleUserId_contains: String

  """All values not containing the given string."""
  googleUserId_not_contains: String

  """All values starting with the given string."""
  googleUserId_starts_with: String

  """All values not starting with the given string."""
  googleUserId_not_starts_with: String

  """All values ending with the given string."""
  googleUserId_ends_with: String

  """All values not ending with the given string."""
  googleUserId_not_ends_with: String
  userImage: ImageWhereInput
  items_every: ItemWhereInput
  items_some: ItemWhereInput
  items_none: ItemWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
  facebookUserId: String
  googleUserId: String
}
